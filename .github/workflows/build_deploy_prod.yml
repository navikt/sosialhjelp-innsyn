name: "Build image and deploy to production"
on:
    workflow_call:
    workflow_run:
        workflows: ["Build code and run tests"]
        branches: [main]
        types:
            - completed
jobs:
    build-image:
        name: "Build Image for Deploy"
        runs-on: ubuntu-latest
        permissions:
            contents: read
            id-token: write
        outputs:
            image: ${{ steps.docker-build-push.outputs.image }}
        steps:
            - uses: actions/checkout@v5

            - name: "Copy appropriate env file to root"
              shell: bash
              run: |
                  echo "Copying nais/envs/.env.production..."
                  cp nais/envs/.env.production .env.production

            - name: "Build npm project"
              uses: navikt/sosialhjelp-ci/actions/build-npm@main
              with:
                  node-version: 24
                  build-less: "false"
                  reader-token: ${{ secrets.READER_TOKEN }}
                  run-test: "false"
                  run-orval: "true"

            - name: "Upload static files to cdn"
              id: upload
              uses: nais/deploy/actions/cdn-upload/v2@master
              with:
                  team: teamdigisos
                  source: ./.next/static
                  destination: "/sosialhjelp-innsyn/_next"

            - name: Build and push docker image to GAR
              uses: nais/docker-build-push@v0
              id: docker-build-push
              with:
                  team: teamdigisos
                  image_suffix: production

    deploy-gcp:
        name: "Deploy to production"
        permissions:
            id-token: write
            contents: read
        needs: build-image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - name: "Deploy til prod"
              uses: nais/deploy/actions/deploy@v2
              env:
                  RESOURCE: nais/prod/prod.yaml
                  CLUSTER: prod-gcp
                  REF: ${{ github.sha }}
                  PRINT_PAYLOAD: true
                  VAR: image=${{ needs.build-image.outputs.image }}
