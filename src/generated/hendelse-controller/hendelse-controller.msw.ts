/**
 * Generated by orval v7.2.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {faker} from "@faker-js/faker";
import {HttpResponse, delay, http} from "msw";
import type {HendelseResponse} from ".././model";

export const getHentHendelserResponseMock = (): HendelseResponse[] =>
    Array.from({length: faker.number.int({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        filUrl: faker.helpers.arrayElement([
            {
                link: faker.word.sample(),
                linkTekst: faker.helpers.arrayElement([
                    "SOKNAD_SEND_TIL_KONTOR",
                    "SOKNAD_UNDER_BEHANDLING",
                    "SOKNAD_MOTTATT_MED_KOMMUNENAVN",
                    "SOKNAD_MOTTATT_UTEN_KOMMUNENAVN",
                    "SOKNAD_FERDIGBEHANDLET",
                    "SOKNAD_BEHANDLES_IKKE",
                    "SOKNAD_VIDERESENDT_PAPIRSOKNAD_MED_NORG_ENHET",
                    "SOKNAD_VIDERESENDT_PAPIRSOKNAD_UTEN_NORG_ENHET",
                    "SOKNAD_VIDERESENDT_MED_NORG_ENHET",
                    "SOKNAD_VIDERESENDT_UTEN_NORG_ENHET",
                    "SOKNAD_KAN_IKKE_VISE_STATUS_MED_TITTEL",
                    "SOKNAD_KAN_IKKE_VISE_STATUS_UTEN_TITTEL",
                    "SAK_UNDER_BEHANDLING_MED_TITTEL",
                    "SAK_UNDER_BEHANDLING_UTEN_TITTEL",
                    "SAK_FERDIGBEHANDLET_MED_TITTEL",
                    "SAK_FERDIGBEHANDLET_UTEN_TITTEL",
                    "SAK_KAN_IKKE_VISE_STATUS_MED_TITTEL",
                    "SAK_KAN_IKKE_VISE_STATUS_UTEN_TITTEL",
                    "ANTALL_SENDTE_VEDLEGG",
                    "UTBETALINGER_OPPDATERT",
                    "BREV_OM_SAKSBEANDLINGSTID",
                    "ETTERSPOR_MER_DOKUMENTASJON",
                    "ETTERSPOR_IKKE_MER_DOKUMENTASJON",
                    "DOKUMENTASJONKRAV",
                    "SOKNAD_SEND_TIL_KONTOR_LENKETEKST",
                    "VIS_BREVET_LENKETEKST",
                ] as const),
            },
            undefined,
        ]),
        hendelseType: faker.word.sample(),
        kommuneNummer: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        navEnhetsNavn: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        navEnhetsNummer: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        saksReferanse: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        tekstArgument: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        tidspunkt: faker.word.sample(),
    }));

export const getHentHendelserMockHandler = (
    overrideResponse?:
        | HendelseResponse[]
        | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<HendelseResponse[]> | HendelseResponse[])
) => {
    return http.get("*/api/v1/innsyn/:fiksDigisosId/hendelser", async (info) => {
        await delay(1000);

        return new HttpResponse(
            JSON.stringify(
                overrideResponse !== undefined
                    ? typeof overrideResponse === "function"
                        ? await overrideResponse(info)
                        : overrideResponse
                    : getHentHendelserResponseMock()
            ),
            {status: 200, headers: {"Content-Type": "application/json"}}
        );
    });
};
export const getHendelseControllerMock = () => [getHentHendelserMockHandler()];
