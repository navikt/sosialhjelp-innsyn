/**
 * Generated by orval v6.20.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {faker} from "@faker-js/faker";
import {HttpResponse, delay, http} from "msw";

export const getHentKlagerMock = () =>
    Array.from({length: faker.number.int({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        klageUrl: {
            dato: faker.helpers.arrayElement([faker.date.past().toISOString().split("T")[0], undefined]),
            id: faker.word.sample(),
            url: faker.word.sample(),
        },
        nyttVedtakUrl: faker.helpers.arrayElement([
            {
                dato: faker.helpers.arrayElement([faker.date.past().toISOString().split("T")[0], undefined]),
                id: faker.word.sample(),
                url: faker.word.sample(),
            },
            undefined,
        ]),
        paaklagetVedtakRefs: Array.from({length: faker.number.int({min: 1, max: 10})}, (_, i) => i + 1).map(() =>
            faker.word.sample()
        ),
        status: faker.helpers.arrayElement([
            "SENDT",
            "MOTTATT",
            "UNDER_BEHANDLING",
            "FERDIG_BEHANDLET",
            "HOS_STATSFORVALTER",
        ]),
    }));

export const getSendKlageMock = () => ({});

export const getKlageControllerMSW = () => [
    http.get("*/api/v1/innsyn/:fiksDigisosId/klage", async () => {
        await delay(1000);
        return new HttpResponse(JSON.stringify(getHentKlagerMock()), {
            status: 200,
            headers: {
                "Content-Type": "application/json",
            },
        });
    }),
    http.post("*/api/v1/innsyn/:fiksDigisosId/klage", async () => {
        await delay(1000);
        return new HttpResponse(JSON.stringify(getSendKlageMock()), {
            status: 200,
            headers: {
                "Content-Type": "application/json",
            },
        });
    }),
];
