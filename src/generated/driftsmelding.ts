/**
 * Generated by orval v6.31.0 🍺
 * Do not edit manually.
 * Sosialhjelp driftsmeldinger
 * OpenAPI spec version: 1.0
 */
import {driftsmeldingFetch} from "../utils/driftsmeldingFetch";
export type GetApiStatusAudience = (typeof GetApiStatusAudience)[keyof typeof GetApiStatusAudience];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiStatusAudience = {
    soknad: "soknad",
    innsyn: "innsyn",
    modia: "modia",
} as const;

export type GetApiStatusParams = {
    /**
     * Publikum for driftsmeldinger
     */
    audience: GetApiStatusAudience;
};

/**
 * Hvordan driftsmeldingen skal vises; samsvarer med Aksel sin Alert-komponent
 */
export type Severity = (typeof Severity)[keyof typeof Severity];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Severity = {
    info: "info",
    success: "success",
    error: "error",
    warning: "warning",
} as const;

export interface Driftsmelding {
    createdAt: string;
    /** Driftsmeldingen utløper (blir usynlig) etter dato */
    expiresAt?: string;
    id: number;
    /** Driftsmeldingen blir først synlig etter dato */
    publishedAt?: string;
    severity: Severity;
    /** Teksten som skal vises i driftsmeldingen, i Markdown-format */
    text: string;
    /** Driftsmeldingen skal vises i innsyn */
    visibleInInnsyn: boolean;
    /** Driftsmeldingen skal vises i modia */
    visibleInModia: boolean;
    /** Driftsmeldingen skal vises i søknad */
    visibleInSoknad: boolean;
}

/**
 * Hent liste med aktive driftsmeldinger
 */
export type getApiStatusResponse = {
    data: Driftsmelding[];
    status: number;
};

export const getGetApiStatusUrl = (params: GetApiStatusParams) => {
    const normalizedParams = new URLSearchParams();

    Object.entries(params || {}).forEach(([key, value]) => {
        if (value === null) {
            normalizedParams.append(key, "null");
        } else if (value !== undefined) {
            normalizedParams.append(key, value.toString());
        }
    });

    return `https://fakePlaceholder/api/status?${normalizedParams.toString()}`;
};

export const getApiStatus = async (
    params: GetApiStatusParams,
    options?: RequestInit
): Promise<getApiStatusResponse> => {
    return driftsmeldingFetch<Promise<getApiStatusResponse>>(getGetApiStatusUrl(params), {
        ...options,
        method: "GET",
    });
};
