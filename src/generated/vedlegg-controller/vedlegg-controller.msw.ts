/**
 * Generated by orval v6.20.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {faker} from "@faker-js/faker";
import {HttpResponse, delay, http} from "msw";

export const getHentVedleggMock = () =>
    Array.from({length: faker.number.int({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        datoLagtTil: `${faker.date.past().toISOString().split(".")[0]}Z`,
        filnavn: faker.word.sample(),
        storrelse: faker.number.int({min: undefined, max: undefined}),
        tilleggsinfo: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        type: faker.word.sample(),
        url: faker.word.sample(),
    }));

export const getSendVedleggMock = () =>
    Array.from({length: faker.number.int({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
        filer: Array.from({length: faker.number.int({min: 1, max: 10})}, (_, i) => i + 1).map(() => ({
            filnavn: faker.helpers.arrayElement([faker.word.sample(), undefined]),
            status: faker.helpers.arrayElement([
                "OK",
                "COULD_NOT_LOAD_DOCUMENT",
                "PDF_IS_ENCRYPTED",
                "ILLEGAL_FILE_TYPE",
                "ILLEGAL_FILENAME",
                "FILE_TOO_LARGE",
            ]),
        })),
        hendelsereferanse: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        hendelsetype: faker.helpers.arrayElement([
            faker.helpers.arrayElement(["dokumentasjonEtterspurt", "dokumentasjonkrav", "soknad", "bruker"]),
            undefined,
        ]),
        innsendelsesfrist: faker.helpers.arrayElement([faker.date.past().toISOString().split("T")[0], undefined]),
        tilleggsinfo: faker.helpers.arrayElement([faker.word.sample(), undefined]),
        type: faker.word.sample(),
    }));

export const getVedleggControllerMSW = () => [
    http.get("*/api/v1/innsyn/:fiksDigisosId/vedlegg", async () => {
        await delay(1000);
        return new HttpResponse(JSON.stringify(getHentVedleggMock()), {
            status: 200,
            headers: {
                "Content-Type": "application/json",
            },
        });
    }),
    http.post("*/api/v1/innsyn/:fiksDigisosId/vedlegg", async () => {
        await delay(1000);
        return new HttpResponse(JSON.stringify(getSendVedleggMock()), {
            status: 200,
            headers: {
                "Content-Type": "application/json",
            },
        });
    }),
];
